# Generated by Django 5.1 on 2024-12-02 22:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('drug_discovery', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'dataset',
            },
        ),
        migrations.CreateModel(
            name='Scaffold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scaffold_smiles', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'scaffold',
            },
        ),
        migrations.RemoveField(
            model_name='compound',
            name='ligand',
        ),
        migrations.AddField(
            model_name='resultpeptide',
            name='best_spot',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='cellline',
            name='internal_id',
            field=models.IntegerField(blank=True, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='pathway',
            name='accession',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='pathway',
            name='internal_id',
            field=models.IntegerField(blank=True, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='proteinxref',
            name='ncbi_protein_accession',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='taxonomy',
            name='ncbi_taxonomy',
            field=models.IntegerField(blank=True, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='AssayType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'assay_type',
                'constraints': [models.UniqueConstraint(fields=('name', 'unit'), name='unique_assay_type')],
            },
        ),
        migrations.CreateModel(
            name='AssayResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('raw_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.job')),
                ('job_compound', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.jobcompound')),
                ('assay_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.assaytype')),
            ],
            options={
                'db_table': 'assay_result',
            },
        ),
        migrations.CreateModel(
            name='DatasetCompound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.compound')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.dataset')),
            ],
            options={
                'db_table': 'dataset_compound',
            },
        ),
        migrations.CreateModel(
            name='PDBLigandCompound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.compound')),
                ('ligand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.ligand')),
            ],
            options={
                'db_table': 'pdbligand_compound',
            },
        ),
        migrations.CreateModel(
            name='CompoundScaffold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compound', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.compound')),
                ('scaffold', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.scaffold')),
            ],
            options={
                'db_table': 'compound_scaffold',
            },
        ),
        migrations.CreateModel(
            name='TargetPDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.pdb')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.target')),
            ],
            options={
                'db_table': 'target_pdb',
            },
        ),
        migrations.CreateModel(
            name='AssayCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('unit', models.CharField(blank=True, max_length=20, null=True)),
                ('assay_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drug_discovery.assayresult')),
            ],
            options={
                'db_table': 'assay_condition',
                'constraints': [models.UniqueConstraint(fields=('assay_result', 'parameter'), name='unique_assay_condition')],
            },
        ),
        migrations.AddIndex(
            model_name='assayresult',
            index=models.Index(fields=['job'], name='idx_assay_result_job'),
        ),
        migrations.AddIndex(
            model_name='assayresult',
            index=models.Index(fields=['job_compound', 'assay_type'], name='idx_job_compound_assay_type'),
        ),
        migrations.AddConstraint(
            model_name='assayresult',
            constraint=models.UniqueConstraint(fields=('job_compound', 'assay_type'), name='unique_assay_result'),
        ),
        migrations.AddConstraint(
            model_name='datasetcompound',
            constraint=models.UniqueConstraint(fields=('dataset', 'compound'), name='unique_dataset_compound'),
        ),
        migrations.AddConstraint(
            model_name='pdbligandcompound',
            constraint=models.UniqueConstraint(fields=('ligand', 'compound'), name='unique_ligand_compound'),
        ),
        migrations.AddConstraint(
            model_name='compoundscaffold',
            constraint=models.UniqueConstraint(fields=('compound', 'scaffold'), name='unique_compound_scaffold'),
        ),
        migrations.AddConstraint(
            model_name='targetpdb',
            constraint=models.UniqueConstraint(fields=('target', 'pdb'), name='unique_target_pdb'),
        ),
    ]
